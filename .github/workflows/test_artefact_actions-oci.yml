name: Test Artefact Actions (OCI)

on:
  workflow_dispatch:
  workflow_call:
  push:
    branches:
      - main
  pull_request:

jobs:
  test-artefact-actions:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - registry: oci://localhost:5000/artefact
            username: testuser
            password: testpassword
          # - registry: http://localhost:8080
          #   username: testuser
          #   password: testpassword

    services:
      htpasswd:
        image: httpd:2.4-alpine
        options: >-
          --health-cmd="htpasswd -Bbn testuser testpassword > /auth/htpasswd"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=20
        volumes:
          - /tmp/registry/auth:/auth

      registry:
        image: registry:2
        env:
          REGISTRY_AUTH: htpasswd
          REGISTRY_AUTH_HTPASSWD_REALM: "Registry Realm"
          REGISTRY_AUTH_HTPASSWD_PATH: /auth/htpasswd
        options: >-
          --health-cmd="if ! command -v curl; then apk add curl; fi; curl -u 'testuser:testpassword' http://localhost:5000/v2/ || exit 1"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=20
        ports:
          - 5000:5000
        volumes:
          - /tmp/registry/auth:/auth

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Oras
        uses: dragoscirjan/github-tools/.github/actions/oras-setup@main

      # - name: Create Artefact
      #   run: |
      #     echo "hello world" > artefact.txt
      #
      # - name: Test Oras Push to OCI
      #   if: ${{ ! contains(matrix.registry, 'ecr://') }}
      #   run: |
      #     registry="${{ matrix.registry }}"
      #     registry_host=${registry#oci://}
      #     registry_host=${registry_host%%/*}
      #
      #     oras login $registry_host \
      #       --username ${{ matrix.username }} \
      #       --password ${{ matrix.password }}
      #
      #     oras push $registry:0.1.0 ./artefact.txt
      #
      # # - name: Test Helm Push to Chartmuseum
      # #   if: ${{ startsWith(matrix.registry, 'http://') }}
      # #   run: |
      # #     helm repo add my-chart-test ${{ matrix.repository }} --username ${{ matrix.username }} --password ${{ matrix.password }}
      # #     helm cm-push ./my-chart-0.1.0.tgz my-chart-test || true
      # #
      # #     docker logs $(docker ps -a | grep chartmuseum | awk -F' ' '{ print $1 }')
      # #
      # #     exit 1
      # #
      # # - name: Test artefact Push to ${{ matrix.registry }}
      # #   uses: ./.github/actions/artefact-push
      # #   with:
      # #     to: helm://${{ matrix.registry }}
      # #     artefact: my-chart
      # #     version: 0.1.0
      # #     username: ${{ matrix.username }}
      # #     password: ${{ matrix.password }}
