on:
  workflow_dispatch:
  workflow_call:
  push:
    branches:
      - main
  pull_request:

jobs:
  test-artefact-actions:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          # - registry: oci://localhost:5000/my-helm-charts
          #   username: testuser
          #   password: testpassword
          - registry: http://localhost:8080
            username: testuser
            password: testpassword

    services:
      htpasswd:
        image: httpd:2.4-alpine
        options: >-
          --health-cmd="htpasswd -Bbn testuser testpassword > /auth/htpasswd"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=20
        volumes:
          - /tmp/registry/auth:/auth

      registry:
        image: registry:2
        env:
          REGISTRY_AUTH: htpasswd
          REGISTRY_AUTH_HTPASSWD_REALM: "Registry Realm"
          REGISTRY_AUTH_HTPASSWD_PATH: /auth/htpasswd
        options: >-
          --health-cmd="if ! command -v curl; then apk add curl; fi; curl -u 'testuser:testpassword' http://localhost:5000/v2/ || exit 1"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=20
        ports:
          - 5000:5000
        volumes:
          - /tmp/registry/auth:/auth

      # chartmuseum:
      #   image: chartmuseum/chartmuseum:latest
      #   env:
      #     BASIC_AUTH_USER: testuser
      #     BASIC_AUTH_PASS: testpassword
      #     STORAGE: local
      #     STORAGE_LOCAL_ROOTDIR: /charts
      #   ports:
      #     - 8080:8080
      #   volumes:
      #     - /tmp/charts:/charts
      #   # options: >-
      #   #   --health-cmd="if ! command -v curl; then apk add curl; fi; curl -f http://localhost:8080/health || exit 1"
      #   #   --health-interval=5s
      #   #   --health-timeout=5s
      #   #   --health-retries=20

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Helm
        uses: dragoscirjan/github-tools/.github/actions/helm-setup@main

      - name: Wait for Chartmuseum
        run: |
          docker run --rm -it -d \
            -p 8080:8080 \
            -e DEBUG=1 \
            -e STORAGE=local \
            -e STORAGE_LOCAL_ROOTDIR=/charts \
            -v /tmp/charts:/charts \
            chartmuseum/chartmuseum:latest

          count=0
          while [[ 1 -eq 1 ]]; do
            docker ps -a
            echo "Waiting for Chartmuseum..."
            if curl -u 'testuser:testpassword' http://localhost:8080/health; then
              exit 0
            fi
            if [[ $count -gt 20 ]]; then
              echo "Chartmuseum wait timed out"
              exit 1
            fi
            sleep 5
            count=$((count + 1))
          done

      - name: Create Minimal Helm Chart
        run: |
          mkdir my-chart

          cat <<EOF > my-chart/Chart.yaml
          apiVersion: v2
          name: my-chart
          version: 0.1.0
          EOF

          mkdir my-chart/templates

          touch my-chart/values.yaml

          helm create my-chart

      - name: Package Helm Chart
        run: |
          helm package my-chart --version 0.1.0

      - name: Test Helm Push
        run: |
          helm repo add my-chart-test http://localhost:8080 --username testuser --password testpassword
          helm cm-push ./my-chart-0.1.0.tgz my-chart-test

      - name: Test artefact Push to ${{ matrix.registry }}
        uses: ./.github/actions/artefact-push
        with:
          to: helm://${{ matrix.registry }}
          artefact: my-chart
          version: 0.1.0
          username: ${{ matrix.username }}
          password: ${{ matrix.password }}

      # - name: Verify Helm Chart in ${{ matrix.registry }}
      #   if: ${{ matrix.oci_repo }}
      #   run: |
      #     helm registry login localhost:5000 --username ${{ matrix.username }} --password ${{ matrix.password }}
      #     helm chart list localhost:5000/my-helm-charts

      # - name: Verify Helm Chart in ${{ matrix.registry }}
      #   if: ${{ !matrix.oci_repo }}
      #   run: |
      #     helm repo add my-repo ${{ matrix.registry }} --username ${{ matrix.username }} --password ${{ matrix.password }}
      #     helm repo update
      #     helm search repo my-repo
