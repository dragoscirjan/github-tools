name: Test Artefact Actions (Docker)

on:
  workflow_dispatch:
  workflow_call:
  # push:
  #   branches:
  #     - main
  # pull_request:

jobs:
  test-artefact-actions:
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: testuser
      DOCKER_PASSWORD: testpass
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
        options: >-
          -e REGISTRY_AUTH=htpasswd
          -e REGISTRY_AUTH_HTPASSWD_REALM="Registry Realm"
          -e REGISTRY_AUTH_HTPASSWD_PATH=/auth/htpasswd
          -v /github/workspace/.github/registry/auth:/auth
          --health-cmd "wget --no-verbose --tries=1 --spider http://localhost:5000/v2/ || exit 1"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 20
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Docker Registry User
        run: |
          htpasswd -Bbn ${{ env.DOCKER_USERNAME }} ${{ env.DOCKER_PASSWORD }} > .github/registry/auth/htpasswd

      # - name: Set up MinIO Client (mc)
      #   run: |
      #     curl -sO https://dl.min.io/client/mc/release/linux-amd64/mc
      #     chmod +x mc
      #     sudo mv mc /usr/local/bin/

      # - name: Configure MinIO
      #   run: |
      #     mc alias set myminio http://localhost:9000 ${{ env.AWS_ACCESS_KEY_ID }} ${{ env.AWS_SECRET_ACCESS_KEY }}
      #     mc mb myminio/test-bucket

      # - name: Build Test Artefact
      #   run: |
      #     echo "This is a test artefact" > test-artefact.txt

      - name: Test Artefact Push to S3 (MinIO)
        uses: ./.github/actions/artefact-push
        with:
          to: s3://test-bucket
          artefact: test-artefact.txt
          version: v1.0.0
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          no-aws-auth: true  # Since MinIO accepts any credentials

      # - name: Verify Artefact in MinIO
      #   run: |
      #     mc ls myminio/test-bucket/v1.0.0/

      # - name: Test Artefact Pull from S3 (MinIO)
      #   uses: ./.github/actions/artefact-pull
      #   with:
      #     from: s3://test-bucket
      #     artefact: test-artefact.txt
      #     version: v1.0.0
      #     aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: ${{ env.AWS_REGION }}
      #     no-aws-auth: true

      # - name: Verify Pulled Artefact
      #   run: |
      #     cat test-artefact.txt

      # - name: Build Docker Image
      #   run: |
      #     echo -e "FROM alpine\nCMD echo 'Hello World'" > Dockerfile
      #     docker build -t localhost:5000/test-image:latest .

      # - name: Test Docker Push to Local Registry
      #   uses: ./.github/actions/artefact-push
      #   with:
      #     to: docker://localhost:5000/test-image
      #     version: latest
      #     artefact: Dockerfile  # Not used, but required
      #     jfrog-user: dummy  # Not used for local registry
      #     jfrog-pass: dummy

      # - name: Verify Docker Image in Registry
      #   run: |
      #     curl -X GET http://localhost:5000/v2/_catalog

      # - name: Test Docker Pull from Local Registry
      #   uses: ./.github/actions/artefact-pull
      #   with:
      #     from: docker://localhost:5000/test-image
      #     version: latest
      #     artefact: Dockerfile  # Not used, but required
      #     jfrog-user: dummy  # Not used for local registry
      #     jfrog-pass: dummy

      # - name: Cleanup
      #   run: |
      #     docker rmi localhost:5000/test-image:latest || true
      #     mc rb --force myminio/test-bucket
